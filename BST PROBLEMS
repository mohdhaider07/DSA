// left view of BT

//Function to return a list containing elements of left view of the binary tree.
 void recursion(Node *root, int level, vector<int> &res)
    {
        if(root==NULL) return ;
        if(res.size()==level) res.push_back(root->data);
        // for right view
        /*
     
        recursion(root->right, level+1, res);
        recursion(root->left, level+1, res);
        
        */
        recursion(root->left, level+1, res);
        recursion(root->right, level+1, res); 
    }
vector<int> leftView(Node *root)
{
vector<int> res;
        recursion(root, 0, res);
        return res;

   // Your code here
}


// Mirror reflection
 void mirror(Node* node) {
        // code here
        if(node==NULL){
            return;
        }
       swap(node->left,node->right);
       mirror(node->left);
       mirror(node->right);
 
    }
    // Mirror reflection
    
